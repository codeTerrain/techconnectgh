<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Contact_person extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Contact_person_model');
    } 

    /*
     * Listing of contact_person
     */
    function index()
    {
        $data['contact_person'] = $this->Contact_person_model->get_all_contact_person();
        
        $data['_view'] = 'contact_person/contact_inner6';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new contact_person
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','Name','required|max_length[500]');
		$this->form_validation->set_rules('contact_phone','contact_phone','required|max_length[15]');
		$this->form_validation->set_rules('contact_email','contact_email','required|max_length[500]|valid_email');
		$this->form_validation->set_rules('address','Address','required|max_length[500]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name' => $this->input->post('name'),
				'contact_phone' => $this->input->post('contact_phone'),
				'contact_email' => $this->input->post('contact_email'),
				'address' => $this->input->post('address'),
            );
            
            $contact_person_id = $this->Contact_person_model->add_contact_person($params);
            redirect('contact_person/index');
        }
        else
        {            
            $data['_view'] = 'contact_person/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a contact_person
     */
    function edit($person_id)
    {   
        // check if the contact_person exists before trying to edit it
        $data['contact_person'] = $this->Contact_person_model->get_contact_person($person_id);
        
        if(isset($data['contact_person']['person_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name','Name','required|max_length[500]');
			$this->form_validation->set_rules('contact_phone','contact_phone','required|max_length[15]');
			$this->form_validation->set_rules('contact_email','contact_email','required|max_length[500]|valid_email');
			$this->form_validation->set_rules('address','Address','required|max_length[500]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'name' => $this->input->post('name'),
					'contact_phone' => $this->input->post('contact_phone'),
					'contact_email' => $this->input->post('contact_email'),
					'address' => $this->input->post('address'),
                );

                $this->Contact_person_model->update_contact_person($person_id,$params);            
                redirect('contact_person/index');
            }
            else
            {
                $data['_view'] = 'contact_person/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The contact_person you are trying to edit does not exist.');
    } 

    /*
     * Deleting contact_person
     */
    function remove($person_id)
    {
        $contact_person = $this->Contact_person_model->get_contact_person($person_id);

        // check if the contact_person exists before trying to delete it
        if(isset($contact_person['person_id']))
        {
            $this->Contact_person_model->delete_contact_person($person_id);
            redirect('contact_person/index');
        }
        else
            show_error('The contact_person you are trying to delete does not exist.');
    }
    
}
