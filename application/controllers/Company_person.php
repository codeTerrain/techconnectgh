<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Company_person extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Company_person_model');
    } 

    /*
     * Listing of company_person
     */
    function index()
    {
        $data['company_person'] = $this->Company_person_model->get_all_company_person();
        
        $data['_view'] = 'company_person/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new company_person
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('date_joined','Date Joined','required');
		$this->form_validation->set_rules('position','Position','required|max_length[500]');
		$this->form_validation->set_rules('job_description','Job Description','required|max_length[5000]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'date_joined' => $this->input->post('date_joined'),
				'position' => $this->input->post('position'),
				'exit_year' => $this->input->post('exit_year'),
				'job_description' => $this->input->post('job_description'),
            );
            
            $company_person_id = $this->Company_person_model->add_company_person($params);
            redirect('company_person/index');
        }
        else
        {            
            $data['_view'] = 'company_person/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a company_person
     */
    function edit($company_id)
    {   
        // check if the company_person exists before trying to edit it
        $data['company_person'] = $this->Company_person_model->get_company_person($company_id);
        
        if(isset($data['company_person']['company_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('date_joined','Date Joined','required');
			$this->form_validation->set_rules('position','Position','required|max_length[500]');
			$this->form_validation->set_rules('job_description','Job Description','required|max_length[5000]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'date_joined' => $this->input->post('date_joined'),
					'position' => $this->input->post('position'),
					'exit_year' => $this->input->post('exit_year'),
					'job_description' => $this->input->post('job_description'),
                );

                $this->Company_person_model->update_company_person($company_id,$params);            
                redirect('company_person/index');
            }
            else
            {
                $data['_view'] = 'company_person/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The company_person you are trying to edit does not exist.');
    } 

    /*
     * Deleting company_person
     */
    function remove($company_id)
    {
        $company_person = $this->Company_person_model->get_company_person($company_id);

        // check if the company_person exists before trying to delete it
        if(isset($company_person['company_id']))
        {
            $this->Company_person_model->delete_company_person($company_id);
            redirect('company_person/index');
        }
        else
            show_error('The company_person you are trying to delete does not exist.');
    }
    
}
